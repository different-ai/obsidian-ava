name: Continuous delivery production

# GitHub Action ran when changes have been made in the directory "api/*"

on:
  push:
    branches:
      - main
    paths:
      - "api/**"
env:
  PROJECT_ID: obsidian-ai
  SERVICE: obsidian-ai
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY_PROD }}"

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Get the version
        id: get_version
        run: echo "VERSION=$(sed -n 's/.*image:.*:\(.*\)/\1/p' api/service.prod.yaml)" >> $GITHUB_ENV
 
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./api
          file: ./api/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/obsidian-ava:latest
            ghcr.io/${{ github.repository_owner }}/obsidian-ava:${{ env.VERSION }}
            gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:latest
            gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ env.VERSION }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          metadata: api/service.prod.yaml
          project_id: ${{ env.PROJECT_ID }}
          region: us-central1
          tag: ${{ env.VERSION }}

      - name: Integration test
        shell: bash
        run: |
          curl -X POST "https://${{ env.PROJECT_ID }}.web.app/v1/image/create" -H "Content-Type: application/json" -d '{"size":512,"limit":1,"prompt":"A group of Giraffes visiting a zoo on mars populated by humans"}' > giraffes.jpg
          # upload the image to imgur
          IMGUR_URL=$(curl -X POST "https://api.imgur.com/3/upload" -F "image=@\"giraffes.jpg\"" | jq ".data.link" -r)
          # print the url
          echo "The service indeed workds, generated a funny image that you can see at ${IMGUR_URL}"

      - name: Save image as artifact
        uses: actions/upload-artifact@v2
        with:
          name: generated-image-${{ github.sha }}
          path: giraffes.jpg
